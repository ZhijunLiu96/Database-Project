Database designMy database is designed by Cassandra, which is an open source distributed database management system and provides high availability with no single point of failure.The keyspace I created is library, which includes three tables (column families). One is book_info, one is people, and the other is check_out.For the first table book_info, there are columns including book_id, title, primary_author, secondary_author, date_of_1st_publish, number_of_page, publisher, translator, and book_topic. And I set book_id as a primary key, because book_id is unique for each book. Also, in order to use LIKE operation later, the values in book_topic include both book_id and their topics for the convenience of creating indexed column.For the second table people, its columns are user_id, name, phone, address, and university_affiliation, and its primary key is user_id which is unique.In order to get the check out information, I also created a table check_out, which includes id, book_id, user_id, book_name, check_out_date, check_out_topic, user_name and university_affiliation. The primary key is id, which is unique for each check out, and the values in check_out_topic include both id and their topics for the convenience of creating indexed column to use the LIKE operation.